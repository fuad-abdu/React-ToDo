{"version":3,"sources":["App.js","index.js"],"names":["App","useState","toDos","setToDos","toDo","setToDo","removedToDos","setRemovedToDos","Date","getDay","className","type","value","onChange","e","target","onSubmit","preventDefault","onClick","newToDo","id","now","text","time","moment","format","status","map","obj","console","log","filter","obj2","window","confirm","scope","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAsIeA,MAlIf,WAEE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAwCJ,mBAAS,IAAjD,mBAAOK,EAAP,KAAqBC,EAArB,KACA,EAAkCN,oBAAS,GAA3C,mBAiBA,OAjBA,WAcQ,IAAIO,MACSC,SAGnB,qBAAKC,UAAU,MAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,kBAAf,UACA,oBAAIA,UAAU,iBAAd,uBACE,sBAAKA,UAAU,kCAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,sBAAMA,UAAU,yCAAhB,yBAEF,uBAAOC,KAAK,OAAOC,MAAOR,EAAMS,SAAU,SAACC,GAAD,OAAOT,EAAQS,EAAEC,OAAOH,QAAQF,UAAU,iBACpF,qBAAKA,UAAU,qBAAf,SACE,wBAAQA,UAAU,kBAAkBC,KAAK,SAASK,SAAU,SAAAF,GAAOA,EAAEG,kBAAoBC,QA1BrF,WACd,IAAIC,EAAU,CACZC,GAAIZ,KAAKa,MACTC,KAAMlB,EACNmB,KAAMC,MAASC,OAAO,QACtBC,QAAQ,GAEVvB,EAAS,GAAD,mBAAKD,GAAL,CAAYiB,KACpBd,EAAQ,KAkBE,sBAIJ,qBAAKK,UAAU,YAAf,SACGR,EAAMyB,KAAI,SAACC,GAEV,OADAC,QAAQC,IAAIF,GAEV,qBAAKlB,UAAU,uBAAf,SACE,sBAAKA,UAAU,YAAf,UACGkB,EAAIN,KACL,sBAAKZ,UAAU,UAAf,UACE,wBAAQA,UAAU,kBAAkBQ,QAAS,WAC3Cf,EAASD,EAAM6B,QAAO,SAAAC,GAQpB,OAPIA,EAAKZ,KAAOQ,EAAIR,KACdY,EAAKN,OACPM,EAAKN,QAAS,EAEdM,EAAKN,QAAS,GAGXM,OATX,SAWI,mBAAGtB,UAAU,mBAEjB,wBAAQA,UAAU,iBAAiBQ,QAAS,WACtCe,OAAOC,QAAQ,4CACjB3B,EAAgB,GAAD,mBAAKD,GAAL,CAAmBsB,KAClCzB,EAASD,EAAM6B,QAAO,SAAAC,GACpB,OAAIA,EAAKZ,KAAOQ,EAAIR,GACXY,EAEF,WAPb,SAUI,mBAAGtB,UAAU,gCAQ7B,sBAAKA,UAAU,6BAAf,UACE,8CACA,wBAAOA,UAAU,sDAAjB,UACE,gCACE,+BACE,oBAAIyB,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,4BAGJ,gCACGjC,EAAMyB,KAAI,SAACC,GACV,OACE,+BACE,6BAAKA,EAAIL,OACT,6BAAKK,EAAIN,OACT,mCAAOM,EAAIF,OAAwD,mBAAGhB,UAAU,8BAA5D,mBAAGA,UAAU,6BAAjC,qBAQZ,sBAAKA,UAAU,6BAAf,UACE,+CACA,wBAAOA,UAAU,uDAAjB,UACE,gCACE,+BACE,oBAAIyB,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,4BAGJ,gCACG7B,EAAaqB,KAAI,SAACC,GACjB,OACE,+BACE,6BAAKA,EAAIL,OACT,6BAAKK,EAAIN,OACT,mCAAOM,EAAIF,OAAwD,mBAAGhB,UAAU,8BAA5D,mBAAGA,UAAU,6BAAjC,6BCnHtB0B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.041d3089.chunk.js","sourcesContent":["import \"./App.css\"\nimport React, { useState } from 'react';\nimport moment from \"moment\";\n\nfunction App() {\n\n  const [toDos, setToDos] = useState([]);\n  const [toDo, setToDo] = useState('');\n  const [removedToDos, setRemovedToDos] = useState([])\n  const [compelete, setCompelete] = useState(false);\n\n  const addToDo = () => {\n    var newToDo = {\n      id: Date.now(),\n      text: toDo,\n      time: moment().format(\"LLLL\"),\n      status: false\n    }\n    setToDos([...toDos, newToDo])\n    setToDo('')\n  }\n\n  var days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n  var d = new Date();\n  var dayName = days[d.getDay()];\n\n  return (\n    <div className=\"app\">\n      <div className=\"container\">\n        <div className=\"row text-center\">\n        <h1 className=\"col-md-12 mt-5\">ToDo List</h1>\n          <div className=\"input-group col-md-12 mt-4 mb-3\">\n            <div className=\"input-group-prepend\">\n              <span className=\"input-group-text bg-success text-white\">Add To Do</span>\n            </div>\n            <input type=\"text\" value={toDo} onChange={(e) => setToDo(e.target.value)} className=\"form-control\" />\n            <div className=\"input-group-append\">\n              <button className=\"btn btn-primary\" type=\"submit\" onSubmit={e => { e.preventDefault() }} onClick={addToDo}>Add</button>\n            </div>\n          </div>\n\n          <div className=\"col-md-12\">\n            {toDos.map((obj) => {\n              console.log(obj);\n              return (\n                <div className=\"card bg-warning mt-2\">\n                  <div className=\"card-body\">\n                    {obj.text}\n                    <div className=\"buttons\">\n                      <button className=\"btn btn-success\" onClick={() => {\n                        setToDos(toDos.filter(obj2 => {\n                          if (obj2.id === obj.id) {\n                            if (obj2.status) {\n                              obj2.status = false\n                            } else {\n                              obj2.status = true\n                            }\n                          }\n                          return obj2\n                        }))\n                      }} ><i className=\"fas fa-check\"></i></button>\n\n                      <button className=\"btn btn-danger\" onClick={() => {\n                        if (window.confirm(\"Are you sure you want to remove this ?\")) {\n                          setRemovedToDos([...removedToDos, obj]);\n                          setToDos(toDos.filter(obj2 => {\n                            if (obj2.id !== obj.id) {\n                              return obj2;\n                            }\n                            return null;\n                          }))\n                        }\n                      }} ><i className=\"fas fa-trash\"></i></button>\n                    </div>\n                  </div>\n                </div>\n              )\n            })}\n          </div>\n\n          <div className=\"col-md-12 text-center mt-4\">\n            <h2>Active Tasks</h2>\n            <table className=\"table-striped table table-hover table-bordered mt-4\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">Time</th>\n                  <th scope=\"col\">To Do</th>\n                  <th scope=\"col\">Completed</th>\n                </tr>\n              </thead>\n              <tbody>\n                {toDos.map((obj) => {\n                  return (\n                    <tr>\n                      <td>{obj.time}</td>\n                      <td>{obj.text}</td>\n                      <td> {!obj.status ? <i className=\"fas fa-times text-danger\"></i> : <i className=\"fas fa-check text-success\"></i>} </td>\n                    </tr>\n                  )\n                })}\n              </tbody>\n            </table>\n          </div>\n\n          <div className=\"col-md-12 text-center mt-4\">\n            <h2>Removed Tasks</h2>\n            <table className=\"table-striped table table-hover table-bordered  mt-4\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">Time</th>\n                  <th scope=\"col\">To Do</th>\n                  <th scope=\"col\">Completed</th>\n                </tr>\n              </thead>\n              <tbody>\n                {removedToDos.map((obj) => {\n                  return (\n                    <tr>\n                      <td>{obj.time}</td>\n                      <td>{obj.text}</td>\n                      <td> {!obj.status ? <i className=\"fas fa-times text-danger\"></i> : <i className=\"fas fa-check text-success\"></i>} </td>\n                    </tr>\n                  )\n                })}\n              </tbody>\n            </table>\n          </div>\n\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}